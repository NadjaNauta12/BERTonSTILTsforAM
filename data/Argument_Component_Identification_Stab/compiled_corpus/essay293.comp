Do	Token_Label.OUTSIDE
you	Token_Label.OUTSIDE
think	Token_Label.OUTSIDE
classmates	Token_Label.OUTSIDE
or	Token_Label.OUTSIDE
colleagues	Token_Label.OUTSIDE
should	Token_Label.OUTSIDE
work	Token_Label.OUTSIDE
on	Token_Label.OUTSIDE
projects	Token_Label.OUTSIDE
in	Token_Label.OUTSIDE
person	Token_Label.OUTSIDE
or	Token_Label.OUTSIDE
by	Token_Label.OUTSIDE
e-mail	Token_Label.OUTSIDE
When	Token_Label.OUTSIDE
it	Token_Label.OUTSIDE
comes	Token_Label.OUTSIDE
to	Token_Label.OUTSIDE
the	Token_Label.OUTSIDE
question	Token_Label.OUTSIDE
whether	Token_Label.OUTSIDE
classmates	Token_Label.OUTSIDE
or	Token_Label.OUTSIDE
colleagues	Token_Label.OUTSIDE
should	Token_Label.OUTSIDE
work	Token_Label.OUTSIDE
on	Token_Label.OUTSIDE
projects	Token_Label.OUTSIDE
in	Token_Label.OUTSIDE
person	Token_Label.OUTSIDE
or	Token_Label.OUTSIDE
by	Token_Label.OUTSIDE
email	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
am	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
the	Token_Label.OUTSIDE
view	Token_Label.OUTSIDE
that	Token_Label.OUTSIDE
wok	Token_Label.BEGIN_MAJOR_CLAIM
in	Token_Label.INSIDE_MAJOR_CLAIM
person	Token_Label.INSIDE_MAJOR_CLAIM
is	Token_Label.INSIDE_MAJOR_CLAIM
preferred	Token_Label.INSIDE_MAJOR_CLAIM
because	Token_Label.OUTSIDE
this	Token_Label.BEGIN_CLAIM
means	Token_Label.INSIDE_CLAIM
help	Token_Label.INSIDE_CLAIM
to	Token_Label.INSIDE_CLAIM
achieve	Token_Label.INSIDE_CLAIM
a	Token_Label.INSIDE_CLAIM
good	Token_Label.INSIDE_CLAIM
communication	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

Firstly	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
team	Token_Label.BEGIN_PREMISE
members	Token_Label.INSIDE_PREMISE
may	Token_Label.INSIDE_PREMISE
have	Token_Label.INSIDE_PREMISE
different	Token_Label.INSIDE_PREMISE
views	Token_Label.INSIDE_PREMISE
and	Token_Label.INSIDE_PREMISE
they	Token_Label.INSIDE_PREMISE
need	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
reach	Token_Label.INSIDE_PREMISE
a	Token_Label.INSIDE_PREMISE
union	Token_Label.INSIDE_PREMISE
opinion	Token_Label.INSIDE_PREMISE
efficiently	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Obviously	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
discussion	Token_Label.BEGIN_CLAIM
face	Token_Label.INSIDE_CLAIM
to	Token_Label.INSIDE_CLAIM
face	Token_Label.INSIDE_CLAIM
in	Token_Label.INSIDE_CLAIM
a	Token_Label.INSIDE_CLAIM
meeting	Token_Label.INSIDE_CLAIM
is	Token_Label.INSIDE_CLAIM
much	Token_Label.INSIDE_CLAIM
better	Token_Label.INSIDE_CLAIM
than	Token_Label.INSIDE_CLAIM
by	Token_Label.INSIDE_CLAIM
emails	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

An	Token_Label.BEGIN_PREMISE
experiment	Token_Label.INSIDE_PREMISE
conducted	Token_Label.INSIDE_PREMISE
by	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
Beijing	Token_Label.INSIDE_PREMISE
University	Token_Label.INSIDE_PREMISE
asked	Token_Label.INSIDE_PREMISE
two	Token_Label.INSIDE_PREMISE
groups	Token_Label.INSIDE_PREMISE
of	Token_Label.INSIDE_PREMISE
people	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
discuss	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
budget	Token_Label.INSIDE_PREMISE
of	Token_Label.INSIDE_PREMISE
an	Token_Label.INSIDE_PREMISE
activity	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

The	Token_Label.BEGIN_PREMISE
first	Token_Label.INSIDE_PREMISE
group	Token_Label.INSIDE_PREMISE
was	Token_Label.INSIDE_PREMISE
asked	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
discuss	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
person	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
while	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
second	Token_Label.INSIDE_PREMISE
group	Token_Label.INSIDE_PREMISE
was	Token_Label.INSIDE_PREMISE
asked	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
discuss	Token_Label.INSIDE_PREMISE
by	Token_Label.INSIDE_PREMISE
email	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

The	Token_Label.OUTSIDE
result	Token_Label.OUTSIDE
shows	Token_Label.OUTSIDE
that	Token_Label.OUTSIDE
the	Token_Label.BEGIN_PREMISE
1st	Token_Label.INSIDE_PREMISE
group	Token_Label.INSIDE_PREMISE
used	Token_Label.INSIDE_PREMISE
30	Token_Label.INSIDE_PREMISE
minutes	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
reach	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
agreement	Token_Label.INSIDE_PREMISE
on	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
budget	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
while	Token_Label.INSIDE_PREMISE
it	Token_Label.INSIDE_PREMISE
takes	Token_Label.INSIDE_PREMISE
30	Token_Label.INSIDE_PREMISE
hours	Token_Label.INSIDE_PREMISE
for	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
later	Token_Label.INSIDE_PREMISE
one	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

The	Token_Label.BEGIN_PREMISE
similar	Token_Label.INSIDE_PREMISE
experiment	Token_Label.INSIDE_PREMISE
done	Token_Label.INSIDE_PREMISE
by	Token_Label.INSIDE_PREMISE
other	Token_Label.INSIDE_PREMISE
scientist	Token_Label.INSIDE_PREMISE
show	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
same	Token_Label.INSIDE_PREMISE
result	Token_Label.INSIDE_PREMISE
that	Token_Label.INSIDE_PREMISE
people	Token_Label.INSIDE_PREMISE
can	Token_Label.INSIDE_PREMISE
reach	Token_Label.INSIDE_PREMISE
an	Token_Label.INSIDE_PREMISE
agreement	Token_Label.INSIDE_PREMISE
quickly	Token_Label.INSIDE_PREMISE
if	Token_Label.INSIDE_PREMISE
they	Token_Label.INSIDE_PREMISE
could	Token_Label.INSIDE_PREMISE
talk	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
each	Token_Label.INSIDE_PREMISE
other	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Secondly	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
work	Token_Label.BEGIN_PREMISE
in	Token_Label.INSIDE_PREMISE
person	Token_Label.INSIDE_PREMISE
can	Token_Label.INSIDE_PREMISE
indirectly	Token_Label.INSIDE_PREMISE
improve	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
quality	Token_Label.INSIDE_PREMISE
and	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
efficiency	Token_Label.INSIDE_PREMISE
of	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
project	Token_Label.INSIDE_PREMISE
because	Token_Label.OUTSIDE
there	Token_Label.BEGIN_PREMISE
will	Token_Label.INSIDE_PREMISE
be	Token_Label.INSIDE_PREMISE
less	Token_Label.INSIDE_PREMISE
conflicts	Token_Label.INSIDE_PREMISE
or	Token_Label.INSIDE_PREMISE
fight	Token_Label.INSIDE_PREMISE
amongst	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
team	Token_Label.INSIDE_PREMISE
members	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Writing	Token_Label.BEGIN_PREMISE
an	Token_Label.INSIDE_PREMISE
email	Token_Label.INSIDE_PREMISE
for	Token_Label.INSIDE_PREMISE
an	Token_Label.INSIDE_PREMISE
informal	Token_Label.INSIDE_PREMISE
matter	Token_Label.INSIDE_PREMISE
will	Token_Label.INSIDE_PREMISE
make	Token_Label.INSIDE_PREMISE
that	Token_Label.INSIDE_PREMISE
matter	Token_Label.INSIDE_PREMISE
looks	Token_Label.INSIDE_PREMISE
official	Token_Label.INSIDE_PREMISE
,	Token_Label.OUTSIDE
therefore	Token_Label.OUTSIDE
people	Token_Label.BEGIN_PREMISE
who	Token_Label.INSIDE_PREMISE
receives	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
email	Token_Label.INSIDE_PREMISE
may	Token_Label.INSIDE_PREMISE
feel	Token_Label.INSIDE_PREMISE
nervous	Token_Label.INSIDE_PREMISE
or	Token_Label.INSIDE_PREMISE
maybe	Token_Label.INSIDE_PREMISE
feel	Token_Label.INSIDE_PREMISE
offended	Token_Label.INSIDE_PREMISE
by	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
words	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
writing	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

While	Token_Label.OUTSIDE
if	Token_Label.BEGIN_PREMISE
the	Token_Label.INSIDE_PREMISE
same	Token_Label.INSIDE_PREMISE
words	Token_Label.INSIDE_PREMISE
are	Token_Label.INSIDE_PREMISE
expressed	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
talking	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
counterparty	Token_Label.INSIDE_PREMISE
will	Token_Label.INSIDE_PREMISE
feel	Token_Label.INSIDE_PREMISE
more	Token_Label.INSIDE_PREMISE
relaxed	Token_Label.INSIDE_PREMISE
since	Token_Label.OUTSIDE
their	Token_Label.BEGIN_PREMISE
response	Token_Label.INSIDE_PREMISE
will	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
be	Token_Label.INSIDE_PREMISE
recorded	Token_Label.INSIDE_PREMISE
and	Token_Label.INSIDE_PREMISE
they	Token_Label.INSIDE_PREMISE
will	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
misunderstand	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
informal	Token_Label.INSIDE_PREMISE
discussion	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
an	Token_Label.INSIDE_PREMISE
official	Token_Label.INSIDE_PREMISE
claim	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Therefore	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
less	Token_Label.BEGIN_CLAIM
misunderstanding	Token_Label.INSIDE_CLAIM
leads	Token_Label.INSIDE_CLAIM
to	Token_Label.INSIDE_CLAIM
less	Token_Label.INSIDE_CLAIM
conflicts	Token_Label.INSIDE_CLAIM
and	Token_Label.INSIDE_CLAIM
fights	Token_Label.INSIDE_CLAIM
,	Token_Label.INSIDE_CLAIM
and	Token_Label.INSIDE_CLAIM
enhance	Token_Label.INSIDE_CLAIM
the	Token_Label.INSIDE_CLAIM
communication	Token_Label.INSIDE_CLAIM
amongst	Token_Label.INSIDE_CLAIM
the	Token_Label.INSIDE_CLAIM
team	Token_Label.INSIDE_CLAIM
members	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

Admittedly	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
sometimes	Token_Label.BEGIN_PREMISE
we	Token_Label.INSIDE_PREMISE
have	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
use	Token_Label.INSIDE_PREMISE
emails	Token_Label.INSIDE_PREMISE
if	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
team	Token_Label.INSIDE_PREMISE
members	Token_Label.INSIDE_PREMISE
are	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
located	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
same	Token_Label.INSIDE_PREMISE
place	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Although	Token_Label.OUTSIDE
emails	Token_Label.BEGIN_CLAIM
are	Token_Label.INSIDE_CLAIM
not	Token_Label.INSIDE_CLAIM
convenient	Token_Label.INSIDE_CLAIM
for	Token_Label.INSIDE_CLAIM
the	Token_Label.INSIDE_CLAIM
work	Token_Label.INSIDE_CLAIM
but	Token_Label.INSIDE_CLAIM
it	Token_Label.INSIDE_CLAIM
is	Token_Label.INSIDE_CLAIM
better	Token_Label.INSIDE_CLAIM
than	Token_Label.INSIDE_CLAIM
none	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

Since	Token_Label.OUTSIDE
it	Token_Label.BEGIN_PREMISE
is	Token_Label.INSIDE_PREMISE
a	Token_Label.INSIDE_PREMISE
classroom	Token_Label.INSIDE_PREMISE
or	Token_Label.INSIDE_PREMISE
campus	Token_Label.INSIDE_PREMISE
projects	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
there	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
few	Token_Label.INSIDE_PREMISE
possibility	Token_Label.INSIDE_PREMISE
that	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
project	Token_Label.INSIDE_PREMISE
members	Token_Label.INSIDE_PREMISE
are	Token_Label.INSIDE_PREMISE
located	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
different	Token_Label.INSIDE_PREMISE
areas	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

While	Token_Label.OUTSIDE
we	Token_Label.BEGIN_CLAIM
should	Token_Label.INSIDE_CLAIM
realize	Token_Label.INSIDE_CLAIM
that	Token_Label.INSIDE_CLAIM
in	Token_Label.INSIDE_CLAIM
a	Token_Label.INSIDE_CLAIM
project	Token_Label.INSIDE_CLAIM
,	Token_Label.INSIDE_CLAIM
there	Token_Label.INSIDE_CLAIM
are	Token_Label.INSIDE_CLAIM
numerous	Token_Label.INSIDE_CLAIM
coordination	Token_Label.INSIDE_CLAIM
works	Token_Label.INSIDE_CLAIM
are	Token_Label.INSIDE_CLAIM
required	Token_Label.INSIDE_CLAIM
,	Token_Label.INSIDE_CLAIM
if	Token_Label.INSIDE_CLAIM
each	Token_Label.INSIDE_CLAIM
opinion	Token_Label.INSIDE_CLAIM
is	Token_Label.INSIDE_CLAIM
communicated	Token_Label.INSIDE_CLAIM
via	Token_Label.INSIDE_CLAIM
email	Token_Label.INSIDE_CLAIM
,	Token_Label.INSIDE_CLAIM
there	Token_Label.INSIDE_CLAIM
will	Token_Label.INSIDE_CLAIM
be	Token_Label.INSIDE_CLAIM
hundreds	Token_Label.INSIDE_CLAIM
or	Token_Label.INSIDE_CLAIM
thousands	Token_Label.INSIDE_CLAIM
of	Token_Label.INSIDE_CLAIM
emails	Token_Label.INSIDE_CLAIM
there	Token_Label.INSIDE_CLAIM
that	Token_Label.INSIDE_CLAIM
we	Token_Label.INSIDE_CLAIM
know	Token_Label.INSIDE_CLAIM
this	Token_Label.INSIDE_CLAIM
is	Token_Label.INSIDE_CLAIM
not	Token_Label.INSIDE_CLAIM
a	Token_Label.INSIDE_CLAIM
good	Token_Label.INSIDE_CLAIM
experience	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

In	Token_Label.OUTSIDE
conclusion	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
I	Token_Label.BEGIN_MAJOR_CLAIM
prefer	Token_Label.INSIDE_MAJOR_CLAIM
the	Token_Label.INSIDE_MAJOR_CLAIM
project	Token_Label.INSIDE_MAJOR_CLAIM
members	Token_Label.INSIDE_MAJOR_CLAIM
to	Token_Label.INSIDE_MAJOR_CLAIM
work	Token_Label.INSIDE_MAJOR_CLAIM
in	Token_Label.INSIDE_MAJOR_CLAIM
person	Token_Label.INSIDE_MAJOR_CLAIM
rather	Token_Label.INSIDE_MAJOR_CLAIM
them	Token_Label.INSIDE_MAJOR_CLAIM
by	Token_Label.INSIDE_MAJOR_CLAIM
email	Token_Label.INSIDE_MAJOR_CLAIM
because	Token_Label.OUTSIDE
work	Token_Label.BEGIN_CLAIM
in	Token_Label.INSIDE_CLAIM
person	Token_Label.INSIDE_CLAIM
will	Token_Label.INSIDE_CLAIM
be	Token_Label.INSIDE_CLAIM
more	Token_Label.INSIDE_CLAIM
efficient	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

