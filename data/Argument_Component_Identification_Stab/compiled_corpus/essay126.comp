One	Token_Label.OUTSIDE
or	Token_Label.OUTSIDE
two	Token_Label.OUTSIDE
close	Token_Label.OUTSIDE
friends	Token_Label.OUTSIDE
vs.	Token_Label.OUTSIDE
a	Token_Label.OUTSIDE
large	Token_Label.OUTSIDE
number	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
casual	Token_Label.OUTSIDE
acquaintances	Token_Label.OUTSIDE
There	Token_Label.OUTSIDE
is	Token_Label.OUTSIDE
no	Token_Label.OUTSIDE
need	Token_Label.OUTSIDE
for	Token_Label.OUTSIDE
me	Token_Label.OUTSIDE
to	Token_Label.OUTSIDE
put	Token_Label.OUTSIDE
any	Token_Label.OUTSIDE
emphasis	Token_Label.OUTSIDE
on	Token_Label.OUTSIDE
the	Token_Label.OUTSIDE
advantage	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
having	Token_Label.OUTSIDE
a	Token_Label.OUTSIDE
large	Token_Label.OUTSIDE
number	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
casual	Token_Label.OUTSIDE
acquaintance	Token_Label.OUTSIDE
.	Token_Label.OUTSIDE

However	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
still	Token_Label.OUTSIDE
agree	Token_Label.OUTSIDE
that	Token_Label.OUTSIDE
it	Token_Label.BEGIN_MAJOR_CLAIM
's	Token_Label.INSIDE_MAJOR_CLAIM
better	Token_Label.INSIDE_MAJOR_CLAIM
to	Token_Label.INSIDE_MAJOR_CLAIM
have	Token_Label.INSIDE_MAJOR_CLAIM
one	Token_Label.INSIDE_MAJOR_CLAIM
or	Token_Label.INSIDE_MAJOR_CLAIM
two	Token_Label.INSIDE_MAJOR_CLAIM
close	Token_Label.INSIDE_MAJOR_CLAIM
friends	Token_Label.INSIDE_MAJOR_CLAIM
than	Token_Label.INSIDE_MAJOR_CLAIM
to	Token_Label.INSIDE_MAJOR_CLAIM
have	Token_Label.INSIDE_MAJOR_CLAIM
a	Token_Label.INSIDE_MAJOR_CLAIM
large	Token_Label.INSIDE_MAJOR_CLAIM
number	Token_Label.INSIDE_MAJOR_CLAIM
of	Token_Label.INSIDE_MAJOR_CLAIM
casual	Token_Label.INSIDE_MAJOR_CLAIM
acquaintances	Token_Label.INSIDE_MAJOR_CLAIM
.	Token_Label.OUTSIDE

We	Token_Label.OUTSIDE
can	Token_Label.OUTSIDE
not	Token_Label.OUTSIDE
deny	Token_Label.OUTSIDE
that	Token_Label.OUTSIDE
being	Token_Label.BEGIN_PREMISE
a	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
with	Token_Label.INSIDE_PREMISE
someone	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
different	Token_Label.INSIDE_PREMISE
from	Token_Label.INSIDE_PREMISE
only	Token_Label.INSIDE_PREMISE
being	Token_Label.INSIDE_PREMISE
acquaintant	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

First	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
it	Token_Label.BEGIN_PREMISE
's	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
easy	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
make	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
with	Token_Label.INSIDE_PREMISE
anyone	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

I	Token_Label.OUTSIDE
believe	Token_Label.OUTSIDE
friends	Token_Label.BEGIN_PREMISE
are	Token_Label.INSIDE_PREMISE
people	Token_Label.INSIDE_PREMISE
who	Token_Label.INSIDE_PREMISE
have	Token_Label.INSIDE_PREMISE
great	Token_Label.INSIDE_PREMISE
compatibility	Token_Label.INSIDE_PREMISE
with	Token_Label.INSIDE_PREMISE
each	Token_Label.INSIDE_PREMISE
other	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

After	Token_Label.BEGIN_PREMISE
two	Token_Label.INSIDE_PREMISE
years	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
college	Token_Label.INSIDE_PREMISE
I	Token_Label.INSIDE_PREMISE
have	Token_Label.INSIDE_PREMISE
found	Token_Label.INSIDE_PREMISE
sometimes	Token_Label.INSIDE_PREMISE
there	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
more	Token_Label.INSIDE_PREMISE
differences	Token_Label.INSIDE_PREMISE
between	Token_Label.INSIDE_PREMISE
people	Token_Label.INSIDE_PREMISE
than	Token_Label.INSIDE_PREMISE
similarities	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
for	Token_Label.INSIDE_PREMISE
we	Token_Label.INSIDE_PREMISE
are	Token_Label.INSIDE_PREMISE
growing	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
different	Token_Label.INSIDE_PREMISE
families	Token_Label.INSIDE_PREMISE
and	Token_Label.INSIDE_PREMISE
was	Token_Label.INSIDE_PREMISE
educated	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
various	Token_Label.INSIDE_PREMISE
ways	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Sometimes	Token_Label.BEGIN_PREMISE
acquaintances	Token_Label.INSIDE_PREMISE
are	Token_Label.INSIDE_PREMISE
just	Token_Label.INSIDE_PREMISE
acquaintances	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

We	Token_Label.BEGIN_PREMISE
spend	Token_Label.INSIDE_PREMISE
time	Token_Label.INSIDE_PREMISE
together	Token_Label.INSIDE_PREMISE
but	Token_Label.INSIDE_PREMISE
we	Token_Label.INSIDE_PREMISE
could	Token_Label.INSIDE_PREMISE
never	Token_Label.INSIDE_PREMISE
be	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

So	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
it	Token_Label.BEGIN_CLAIM
's	Token_Label.INSIDE_CLAIM
much	Token_Label.INSIDE_CLAIM
easier	Token_Label.INSIDE_CLAIM
to	Token_Label.INSIDE_CLAIM
have	Token_Label.INSIDE_CLAIM
some	Token_Label.INSIDE_CLAIM
casual	Token_Label.INSIDE_CLAIM
acquaintances	Token_Label.INSIDE_CLAIM
than	Token_Label.INSIDE_CLAIM
have	Token_Label.INSIDE_CLAIM
some	Token_Label.INSIDE_CLAIM
close	Token_Label.INSIDE_CLAIM
friends	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

Second	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
close	Token_Label.BEGIN_CLAIM
friends	Token_Label.INSIDE_CLAIM
can	Token_Label.INSIDE_CLAIM
easily	Token_Label.INSIDE_CLAIM
understand	Token_Label.INSIDE_CLAIM
each	Token_Label.INSIDE_CLAIM
others	Token_Label.INSIDE_CLAIM
feelings	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

Because	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
the	Token_Label.OUTSIDE
similarity	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
talked	Token_Label.OUTSIDE
before	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
acquaintances	Token_Label.BEGIN_PREMISE
probably	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
able	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
understand	Token_Label.INSIDE_PREMISE
you	Token_Label.INSIDE_PREMISE
better	Token_Label.INSIDE_PREMISE
than	Token_Label.INSIDE_PREMISE
your	Token_Label.INSIDE_PREMISE
friends	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Moreover	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
they	Token_Label.BEGIN_PREMISE
would	Token_Label.INSIDE_PREMISE
n't	Token_Label.INSIDE_PREMISE
even	Token_Label.INSIDE_PREMISE
spare	Token_Label.INSIDE_PREMISE
time	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
consider	Token_Label.INSIDE_PREMISE
your	Token_Label.INSIDE_PREMISE
feelings	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Everyone	Token_Label.BEGIN_PREMISE
play	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
role	Token_Label.INSIDE_PREMISE
of	Token_Label.INSIDE_PREMISE
acquaintance	Token_Label.INSIDE_PREMISE
and	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
at	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
same	Token_Label.INSIDE_PREMISE
time	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

Being	Token_Label.BEGIN_PREMISE
friendly	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
a	Token_Label.INSIDE_PREMISE
good	Token_Label.INSIDE_PREMISE
way	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
treat	Token_Label.INSIDE_PREMISE
a	Token_Label.INSIDE_PREMISE
acquaintance	Token_Label.INSIDE_PREMISE
but	Token_Label.INSIDE_PREMISE
way	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
enough	Token_Label.INSIDE_PREMISE
for	Token_Label.INSIDE_PREMISE
a	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

When	Token_Label.BEGIN_PREMISE
my	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
sick	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
I	Token_Label.INSIDE_PREMISE
would	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
only	Token_Label.INSIDE_PREMISE
ask	Token_Label.INSIDE_PREMISE
if	Token_Label.INSIDE_PREMISE
he	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
okay	Token_Label.INSIDE_PREMISE
like	Token_Label.INSIDE_PREMISE
an	Token_Label.INSIDE_PREMISE
acquaintance	Token_Label.INSIDE_PREMISE
but	Token_Label.INSIDE_PREMISE
do	Token_Label.INSIDE_PREMISE
my	Token_Label.INSIDE_PREMISE
best	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
make	Token_Label.INSIDE_PREMISE
him	Token_Label.INSIDE_PREMISE
get	Token_Label.INSIDE_PREMISE
well	Token_Label.INSIDE_PREMISE
as	Token_Label.INSIDE_PREMISE
soon	Token_Label.INSIDE_PREMISE
as	Token_Label.INSIDE_PREMISE
possible	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

If	Token_Label.BEGIN_PREMISE
my	Token_Label.INSIDE_PREMISE
friend	Token_Label.INSIDE_PREMISE
is	Token_Label.INSIDE_PREMISE
going	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
wrong	Token_Label.INSIDE_PREMISE
direction	Token_Label.INSIDE_PREMISE
in	Token_Label.INSIDE_PREMISE
his	Token_Label.INSIDE_PREMISE
life	Token_Label.INSIDE_PREMISE
trail	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
I	Token_Label.INSIDE_PREMISE
will	Token_Label.INSIDE_PREMISE
try	Token_Label.INSIDE_PREMISE
my	Token_Label.INSIDE_PREMISE
best	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
pull	Token_Label.INSIDE_PREMISE
him	Token_Label.INSIDE_PREMISE
back	Token_Label.INSIDE_PREMISE
,	Token_Label.INSIDE_PREMISE
but	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
stand	Token_Label.INSIDE_PREMISE
and	Token_Label.INSIDE_PREMISE
stare	Token_Label.INSIDE_PREMISE
like	Token_Label.INSIDE_PREMISE
it	Token_Label.INSIDE_PREMISE
's	Token_Label.INSIDE_PREMISE
not	Token_Label.INSIDE_PREMISE
of	Token_Label.INSIDE_PREMISE
my	Token_Label.INSIDE_PREMISE
business	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

And	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
believe	Token_Label.OUTSIDE
my	Token_Label.BEGIN_PREMISE
friend	Token_Label.INSIDE_PREMISE
will	Token_Label.INSIDE_PREMISE
do	Token_Label.INSIDE_PREMISE
the	Token_Label.INSIDE_PREMISE
same	Token_Label.INSIDE_PREMISE
to	Token_Label.INSIDE_PREMISE
me	Token_Label.INSIDE_PREMISE
.	Token_Label.OUTSIDE

In	Token_Label.OUTSIDE
conclusion	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
a	Token_Label.BEGIN_CLAIM
friend	Token_Label.INSIDE_CLAIM
is	Token_Label.INSIDE_CLAIM
a	Token_Label.INSIDE_CLAIM
person	Token_Label.INSIDE_CLAIM
you	Token_Label.INSIDE_CLAIM
care	Token_Label.INSIDE_CLAIM
about	Token_Label.INSIDE_CLAIM
.	Token_Label.OUTSIDE

To	Token_Label.OUTSIDE
me	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
friends	Token_Label.BEGIN_MAJOR_CLAIM
are	Token_Label.INSIDE_MAJOR_CLAIM
the	Token_Label.INSIDE_MAJOR_CLAIM
most	Token_Label.INSIDE_MAJOR_CLAIM
important	Token_Label.INSIDE_MAJOR_CLAIM
people	Token_Label.INSIDE_MAJOR_CLAIM
in	Token_Label.INSIDE_MAJOR_CLAIM
my	Token_Label.INSIDE_MAJOR_CLAIM
life	Token_Label.INSIDE_MAJOR_CLAIM
second	Token_Label.INSIDE_MAJOR_CLAIM
to	Token_Label.INSIDE_MAJOR_CLAIM
my	Token_Label.INSIDE_MAJOR_CLAIM
family	Token_Label.INSIDE_MAJOR_CLAIM
.	Token_Label.OUTSIDE

I	Token_Label.OUTSIDE
am	Token_Label.OUTSIDE
the	Token_Label.OUTSIDE
kind	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
person	Token_Label.OUTSIDE
who	Token_Label.OUTSIDE
has	Token_Label.OUTSIDE
only	Token_Label.OUTSIDE
one	Token_Label.OUTSIDE
or	Token_Label.OUTSIDE
two	Token_Label.OUTSIDE
close	Token_Label.OUTSIDE
friends	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
and	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
am	Token_Label.OUTSIDE
fully	Token_Label.OUTSIDE
content	Token_Label.OUTSIDE
that	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
have	Token_Label.OUTSIDE
such	Token_Label.OUTSIDE
nice	Token_Label.OUTSIDE
friends	Token_Label.OUTSIDE
.	Token_Label.OUTSIDE

If	Token_Label.OUTSIDE
someone	Token_Label.OUTSIDE
exchange	Token_Label.OUTSIDE
my	Token_Label.OUTSIDE
friends	Token_Label.OUTSIDE
with	Token_Label.OUTSIDE
thousands	Token_Label.OUTSIDE
of	Token_Label.OUTSIDE
acquaintances	Token_Label.OUTSIDE
,	Token_Label.OUTSIDE
I	Token_Label.OUTSIDE
will	Token_Label.OUTSIDE
definitely	Token_Label.OUTSIDE
say	Token_Label.OUTSIDE
NO	Token_Label.OUTSIDE
.	Token_Label.OUTSIDE

